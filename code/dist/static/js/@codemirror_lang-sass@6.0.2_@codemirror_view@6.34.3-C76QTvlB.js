import{p as r}from"./@lezer_sass@1.0.7-CGbLaYJh.js";import{L as s,j as a,k as i,d as t,e as m,c as p}from"./@codemirror_language@6.10.3-bWXGUccf.js";import{defineCSSCompletionSource as d}from"./@codemirror_lang-css@6.3.0_@codemirror_view@6.34.3-BiCxU5Lx.js";import"./@lezer_lr@1.4.2-Cz8Me4wy.js";import"./@lezer_common@1.2.3-CP7NCNqd.js";import"./@lezer_highlight@1.2.1-DwVMghhY.js";import"./@codemirror_state@6.4.1-BMFlvjVs.js";import"./@codemirror_view@6.34.3-jfwbSA-b.js";import"./style-mod@4.1.2-Bc2inJdb.js";import"./w3c-keyname@2.2.8-Vcq4gwWv.js";import"./@lezer_css@1.1.9-DsRYDSCm.js";const e=s.define({name:"sass",parser:r.configure({props:[a.add({Block:i,Comment(o,n){return{from:o.from+2,to:n.sliceDoc(o.to-2,o.to)=="*/"?o.to-2:o.to}}}),t.add({Declaration:m()})]}),languageData:{commentTokens:{block:{open:"/*",close:"*/"},line:"//"},indentOnInput:/^\s*\}$/,wordChars:"$-"}}),l=e.configure({dialect:"indented",props:[t.add({"Block RuleSet":o=>o.baseIndent+o.unit}),a.add({Block:o=>({from:o.from,to:o.to})})]}),u=d(o=>o.name=="VariableName"||o.name=="SassVariableName");function D(o){return new p(o!=null&&o.indented?l:e,e.data.of({autocomplete:u}))}export{D as sass,u as sassCompletionSource,e as sassLanguage};
